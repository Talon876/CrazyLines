<?xml version="1.0"?>
<project name="CrazyLines" default="main" basedir=".">
	<!-- Sets variables which can later be used. -->
	<!-- The value of a property is accessed via ${} -->
	<property name="src.dir" location="src" />
	<property name="build.dir" location="build" />
	<property name="dist.dir" location="dist" />
	<property name="docs.dir" location="docs" />
	<property name="content.dir" location="content" />
	<property name="lib.dir" location="lib" />
	<property name="version" value="1.2" />
	<property name="mainClass" value="engine.Window" />
	<tstamp>
		<format property="TODAY" pattern="yyyy-MM-dd HH:mm:ss" />
	</tstamp>

	<!-- Variables used for JUnit testin -->
	<property name="test.report.dir" location="testreport" />
	<property name="test.dir" location="test" />

	<!-- Define the classpath which includes the junit.jar and the classes after compiling-->
	<path id="junit.class.path">
		<pathelement location="${lib.dir}/junit.jar" />
		<pathelement location="${build.dir}" />
	</path>

	<!-- Deletes the existing build, docs, dist, directory-->
	<target name="clean">
		<delete dir="${build.dir}" />
		<delete dir="${docs.dir}" />
		<delete dir="${dist.dir}" />
		<delete dir="${test.report.dir}" />
	</target>

	<!-- Creates the  build, docs, dist, directory-->
	<target name="makedir">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${docs.dir}" />
		<mkdir dir="${dist.dir}" />
		<mkdir dir="${test.report.dir}" />
	</target>

	<!-- Compiles the java code (including the usage of library for JUnit) -->
	<target name="compile" depends="clean, makedir">
		<javac nowarn="true" srcdir="${src.dir}" destdir="${build.dir}">
			<classpath refid="junit.class.path" />
		</javac>

	</target>

	<!-- Creates Javadoc -->
	<target name="docs" depends="compile">
		<javadoc packagenames="src" sourcepath="${src.dir}" destdir="${docs.dir}">
			<!-- Define which files / directory should get included, we include all -->
			<fileset dir="${src.dir}">
				<include name="**" />
			</fileset>
		</javadoc>
	</target>

	<!--Creates the deployable jar containing the libs and content -->
	<target name="jar" depends="compile">

		<jar destfile="${dist.dir}\${ant.project.name}_${version}.jar" compress="true">
			<fileset dir="${build.dir}" includes="**/*.class" />

			<fileset dir=".">

				<include name="content/**/*.*" />
			</fileset>

			<manifest>
				<attribute name="Built-By" value="Talon Daniels" />
				<attribute name="Built-Date" value="${TODAY}" />
				<attribute name="Main-Class" value="${mainClass}" />
			</manifest>
		</jar>
	</target>

	<!-- Compiles the source, creates the jar, then runs the jar -->
	<target name="run" depends="jar">
		<exec executable="java">
			<arg line="-jar ${dist.dir}\${ant.project.name}_${version}.jar" />
		</exec>
	</target>

	<target name="compiletests" depends="compile">
		<javac nowarn="true" srcdir="${test.dir}" destdir="${build.dir}">
			<classpath refid="junit.class.path" />
		</javac>
	</target>

	<!-- Run the JUnit Tests -->
	<target name="test" depends="compiletests">
		<junit printsummary="on" fork="true" haltonfailure="yes">
			<classpath refid="junit.class.path" />

			<batchtest todir="${test.report.dir}">
				<formatter type="plain" />
				<!-- Output is plain (text), could also be XML-->
				<fileset dir="${test.dir}">
					<include name="**/*Test*.java" />
					<!--Runs a test against all java files following the pattern *Test*.java-->
				</fileset>

			</batchtest>
		</junit>
	</target>

	<target name="main" depends="compile, jar">
		<description>Main target</description>
	</target>

</project>